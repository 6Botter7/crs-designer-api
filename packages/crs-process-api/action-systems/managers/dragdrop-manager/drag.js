async function l(n,t){const a=await crs.call("dom_interactive","get_animation_layer"),e=await r[t.drag.clone](n,t);return e.style.translate=`${n._bounds.x}px ${n._bounds.y}px`,e.style.filter="drop-shadow(0 0 5px #00000080)",a.appendChild(e),e}class r{static async element(t){return t}static async template(t,a){let e=a.drag.template;e==null&&(e=document.querySelector(`#${t.dataset.template}`));const s=e.content.cloneNode(!0).children[0];return s._bounds=t._bounds,s._dragElement=t,s}}async function o(){if(this._updateDragHandler==null)return;const n=this._dragElement._bounds.x+(this._movePoint.x-this._startPoint.x),t=this._dragElement._bounds.y+(this._movePoint.y-this._startPoint.y);this._dragElement.style.translate=`${n}px ${t}px`,requestAnimationFrame(this._updateDragHandler)}export{l as startDrag,o as updateDrag};
